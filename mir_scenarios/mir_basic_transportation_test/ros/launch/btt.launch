<?xml version="1.0"?>
<launch>
 
    <arg name="robot" default="$(optenv ROBOT !!NO_ROBOT_SET!!)"/>
    <arg name="sim" default="false"/>

    <!-- real robot related launches  -->
    <group unless="$(arg sim)">
      <include file="$(find mir_bringup)/robot.launch" />   <!-- base components -->
    </group>

    <!-- simulation related launches -->
    <group if="$(arg sim)">
      <include file="$(find mir_bringup_sim)/robot.launch" />   <!-- base components -->
      <include file="$(find mcr_gazebo_objects)/ros/launch/spawn_objects.launch"/>   <!-- spawn objects -->
    </group>

    <!-- navigation -->
    <include file="$(find mir_2dnav)/ros/launch/2dnav.launch" />

    <!-- manipulation -->
    <include file="$(find mir_moveit_youbot)/$(arg robot)/move_group.launch" />
    <include file="$(find mir_arm_relative_motion_control)/ros/launch/arm_relative_motion_controller.launch" />
    <include file="$(find mir_moveit_scene)/ros/launch/arm_workspace_restricter.launch" />
    <include file="$(find mir_moveit_scene)/ros/launch/grasped_object_attacher.launch" />
    
    <!-- base placement -->
    <include file="$(find mir_base_placement)/ros/launch/base_placement.launch"/>

    <!-- relative base controller -->
    <include file="$(find mcr_relative_base_controller)/ros/launch/relative_base_controller.launch" />

    <!-- perception pipeline -->
    <!-- subscriber to XYZRGB pointcloud to solve the problem of first destructed pointclouds temporarly -->
    <node pkg="rostopic" type="rostopic" name="rostopic" args="hz /tower_cam3d/depth_registered/points"/> 
    <include file="$(find mcr_object_recognition_bounding_box)/ros/launch/object_recognition.launch" />
      
    <!-- Visual Servoing -->
    <include file="$(find mir_visual_servoing)/ros/launch/visual_servoing.launch"/>
 
</launch>
